#include<iostream>
using namespace std;

int main(void) {
	char arr1[100], arr2[100];		//입력받을 숫자를 문자열 배열로 선언, 100으로 선언하였으므로 최대 크기는 100이다.
	int temp, bucket[128] = { 0 };	//실제 인덱스의 값을 저장할 변수 temp와 카운트한 값을 저장할 bucket라는 정수형 배열을 선언한다.
	int flag[10] = { 0 };			//중복 방지를 위해 나온 값을 flag로 구분하기 위해 배열을 선언한다.
	cin >> arr1 >> arr2;			//숫자(문자열) 두개를 입력받는다
	for (int i = 0; i < 100; i++)	//첫번재 배열의 각 자리수를 훑으며 반복문을 실행해준다.
		bucket[arr1[i]]++;			//카운트 하는 배열에 배열의 각자리수의 아스키코드 값의 칸에 1을 추가해준다.
	for (int i = 0; i < 100; i++)	//두번재 배열의 각 자리수를 훑으며 반복문을 실행해준다.
		bucket[arr2[i]]++;			//카운트 하는 배열에 배열의 각자리수의 아스키코드 값의 칸에 1을 추가해준다.

	for (int i = 0; i < 100; i++) {			//첫번재 배열의 각 자리수를 훑으며 반복문을 실행해준다.
		temp = (int)arr1[i] - ('1' - 1);		//temp 변수에 아스키코드와 실제 배열의 자리 숫자의 차를 구한 값을 저장한다.
		if (temp <= 0 || temp >= 10 || flag[temp] != 0) continue;		//각 자리를 계산한 결과값이 0~9안의 수가 아니거나 그 값 칸의 flag배열의 칸이 0이 아니라면 스킵한다.
		cout << arr1[i] << bucket[arr1[i]];			//해당 자리의 숫자와 카운트된 값을 출력해준다.
		flag[temp]++;				//flag 배열의 나온 숫자의 칸을 1 증가시켜주어 flag가 0이 아니도록 해준다,
	}
	for (int i = 0; i < 100; i++) {			//두번재 배열의 각 자리수를 훑으며 반복문을 실행해준다.
		temp = (int)arr2[i] - ('1' - 1);		//temp 변수에 아스키코드와 실제 배열의 자리 숫자의 차를 구한 값을 저장한다.
		if (temp <= 0 || temp >= 10 || flag[temp] != 0) continue;		//각 자리를 계산한 결과값이 0~9안의 수가 아니거나 그 값 칸의 flag배열의 칸이 0이 아니라면 스킵한다.
		cout << arr2[i] << bucket[arr2[i]];			//해당 자리의 숫자와 카운트된 값을 출력해준다.
		flag[temp]++;				//flag 배열의 나온 숫자의 칸을 1 증가시켜주어 flag가 0이 아니도록 해준다,
	}

	return 0;			//main함수 반환
}