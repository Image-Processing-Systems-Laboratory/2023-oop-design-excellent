#include <iostream> // 헤더파일 선언
#include <cmath> // pow를 사용하기 위한 헤더파일 선언
using namespace std; // 표준 라이브러리 사용



void $(char arr[][768], int input, int x, int y) // 이차원 배열의 알맞은 위치에 $를 찍기 위한 함수 선언 
{                                                // 함수의 입력값으로 $를 찍을 이차원배열과 삼각형 크기,
	                                            // 삼각형을 그릴 때 꼭대기가 되는 좌표를 입력받음
	if (input == 3) // 사이즈가 가장 작은 삼각형의 크기가 3이므로 3이 되면 삼각형을 찍는다 
	{
		arr[x][y] = '$'; // 삼각형의 꼭대기

		arr[x+1][y+1] = '$'; // 삼각형의 두번째 줄 오른쪽
		arr[x+1][y-1] = '$'; // 삼각형의 두번째 줄 왼쪽

		arr[x+2][y-2] = '$'; // 삼각형의 세번째 줄 첫번째(가장 왼쪽)
		arr[x+2][y-1] = '$'; // 두번째
		arr[x+2][y] = '$';  // 세번째
		arr[x+2][y+1] = '$'; // 네번째
		arr[x+2][y+2] ='$'; // 다섯번째

		return; // 함수 탈출
	} 
	else // 사이즈가 3보다 크다면 
	{
		$(arr,input / 2, x, y); // 가장 위의 삼각형의 시작좌표(꼭대기)
		$(arr,input / 2, x + input / 2, y - input / 2); // 아래 왼쪽 삼각형의 시작좌표(꼭대기)
		$(arr,input / 2, x + input / 2, y + input / 2); // 아래 오른쪽 삼각형의 시작좌표(꼭대기)
	
		// input을 반으로 나눈 크기의 삼각형을 3개 그려야하므로 (예를 들어, 사이즈가 6인 삼각형은 사이즈가 3인 삼각형
		// 3개로 이루어져 있음) 재귀함수를 통해 input이 가장 작은 삼각형의 사이즈인 3이
		// 될 때 까지 반복함 그 때, 삼각형을 그리기 시작해야 하는 x좌표와 y좌표를 알맞게 설정해줌
	}
}


int main() //메인함수 선언
{
	
	unsigned char k; // unsigned char 형 변수 k 선언
	cin >> k;  // k에 사용자의 입력값을 받음
	
	char board[384][768] = {}; // $과 공백을 출력하기 위한 배열(가로, 세로 크기는 k의 최댓값이 8이므로 그에 맞게 설정함)
							   // k가 최댓값인 8일때, N은 2^7=128이므로
	                           // 세로 = 3 x 128 (3N) -----> x좌표, 가로 = 6 x 128 (3N x 2) ------> y좌표
	
	int N = pow(2, k-'0' - 1); // 정수형 변수 N=2^(k-1)로 선언(k가 char형이므로 아스키 코드를 이용하여
							   // k-'0'으로 정수형으로 바꿔줌)

	$(board, 3 * N, 0, 3 * N - 1);  // $를 찍기위해 선언한 이차원배열 board를 넣고
									// 사이즈는 3N이므로 위에 선언한 함수의 input값에 3N을 넣어줌
                                    // x좌표에 0, y 좌표에 3*N-1을 넣어준 이유는 출력되는 삼각형의 꼭대기 지점의 
			                        // 좌표이기 때문
	
	for (int i = 0; i < 3 * N; i++) // board 배열의 x좌표의 범위 
	{
		for (int j = 0; j < 3 * N * 2; j++) // board 배열의 y좌표의 범위
		{
			if (board[i][j] == '$') // 함수를 마쳤을 때, $를 출력하기 위해 만든 board 배열의 좌표에 $가 저장돼있으면
				cout << board[i][j]; // board를 그대로 출력하고
			else  // $가 저장되어 있지 않으면 빈 공간이므로
				cout << " "; // 공백을 출력함
		}
		cout << endl; // 같은 x좌표에서 시작하는 삼각형 모두 출력 후 줄바꿈
	}
	
	return 0; // 프로그램 종료
}
